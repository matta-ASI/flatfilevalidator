{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "ARM template for CSV validation pipeline with Azure Data Factory, SQL Database, and Storage Account"
  },
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "csvvalidation",
      "metadata": {
        "description": "Specifies a name for generating resource names."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location for all resources."
      }
    },
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The administrator username of the SQL logical server."
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The administrator password of the SQL logical server."
      }
    },
    "dataFactoryName": {
      "type": "string",
      "defaultValue": "[concat(parameters('projectName'), '-adf-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Azure Data Factory"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat(parameters('projectName'), 'storage', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the storage account"
      }
    },
    "sqlServerName": {
      "type": "string",
      "defaultValue": "[concat(parameters('projectName'), '-sqlserver-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the SQL Server"
      }
    },
    "databaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('projectName'), '-db')]",
      "metadata": {
        "description": "Name of the SQL Database"
      }
    }
  },
  "variables": {
    "storageAccountType": "Standard_LRS",
    "keyVaultName": "[concat(parameters('projectName'), '-kv-', uniqueString(resourceGroup().id))]",
    "logAnalyticsWorkspaceName": "[concat(parameters('projectName'), '-law-', uniqueString(resourceGroup().id))]",
    "applicationInsightsName": "[concat(parameters('projectName'), '-ai-', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "allowBlobPublicAccess": false,
        "minimumTlsVersion": "TLS1_2",
        "isHnsEnabled": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": 30
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default/source')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default/staging')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default/processed')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default/logs')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2023-05-01-preview",
      "name": "[parameters('sqlServerName')]",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "minimalTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2023-05-01-preview",
      "name": "[concat(parameters('sqlServerName'), '/', parameters('databaseName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
      ],
      "sku": {
        "name": "S0",
        "tier": "Standard"
      },
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 268435456000,
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
        "zoneRedundant": false,
        "readScale": "Disabled",
        "requestedBackupStorageRedundancy": "Local"
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2023-05-01-preview",
      "name": "[concat(parameters('sqlServerName'), '/AllowAllWindowsAzureIps')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enabledForDeployment": false,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": false,
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "accessPolicies": [],
        "enableRbacAuthorization": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "searchVersion": 1,
          "legacy": 0
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ],
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      }
    },
    {
      "type": "Microsoft.DataFactory/factories",
      "apiVersion": "2018-06-01",
      "name": "[parameters('dataFactoryName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('databaseName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.DataFactory/factories/linkedservices",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('dataFactoryName'), '/AzureBlobStorage')]",
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
      ],
      "properties": {
        "type": "AzureBlobStorage",
        "typeProperties": {
          "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
        }
      }
    },
    {
      "type": "Microsoft.DataFactory/factories/linkedservices",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('dataFactoryName'), '/AzureSqlDatabase')]",
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
      ],
      "properties": {
        "type": "AzureSqlDatabase",
        "typeProperties": {
          "connectionString": "[concat('Server=tcp:', parameters('sqlServerName'), '.database.windows.net,1433;Database=', parameters('databaseName'), ';User ID=', parameters('administratorLogin'), ';Password=', parameters('administratorLoginPassword'), ';Trusted_Connection=False;Encrypt=True;Connection Timeout=30')]"
        }
      }
    },
    {
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('dataFactoryName'), '/SourceCSVDataset')]",
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories/linkedservices', parameters('dataFactoryName'), 'AzureBlobStorage')]"
      ],
      "properties": {
        "linkedServiceName": {
          "referenceName": "AzureBlobStorage",
          "type": "LinkedServiceReference"
        },
        "parameters": {
          "fileName": {
            "type": "string"
          }
        },
        "type": "DelimitedText",
        "typeProperties": {
          "location": {
            "type": "AzureBlobStorageLocation",
            "fileName": {
              "value": "@dataset().fileName",
              "type": "Expression"
            },
            "container": "source"
          },
          "columnDelimiter": ",",
          "escapeChar": "\"",
          "firstRowAsHeader": true,
          "quoteChar": "\""
        },
        "schema": []
      }
    },
    {
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('dataFactoryName'), '/StagingTableDataset')]",
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories/linkedservices', parameters('dataFactoryName'), 'AzureSqlDatabase')]"
      ],
      "properties": {
        "linkedServiceName": {
          "referenceName": "AzureSqlDatabase",
          "type": "LinkedServiceReference"
        },
        "parameters": {
          "tableName": {
            "type": "string"
          }
        },
        "type": "AzureSqlTable",
        "typeProperties": {
          "tableName": {
            "value": "@dataset().tableName",
            "type": "Expression"
          }
        }
      }
    },
    {
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('dataFactoryName'), '/TargetTableDataset')]",
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories/linkedservices', parameters('dataFactoryName'), 'AzureSqlDatabase')]"
      ],
      "properties": {
        "linkedServiceName": {
          "referenceName": "AzureSqlDatabase",
          "type": "LinkedServiceReference"
        },
        "parameters": {
          "tableName": {
            "type": "string"
          }
        },
        "type": "AzureSqlTable",
        "typeProperties": {
          "tableName": {
            "value": "@dataset().tableName",
            "type": "Expression"
          }
        }
      }
    },
    {
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('dataFactoryName'), '/ValidationLogDataset')]",
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories/linkedservices', parameters('dataFactoryName'), 'AzureBlobStorage')]"
      ],
      "properties": {
        "linkedServiceName": {
          "referenceName": "AzureBlobStorage",
          "type": "LinkedServiceReference"
        },
        "parameters": {
          "fileName": {
            "type": "string"
          }
        },
        "type": "DelimitedText",
        "typeProperties": {
          "location": {
            "type": "AzureBlobStorageLocation",
            "fileName": {
              "value": "@dataset().fileName",
              "type": "Expression"
            },
            "container": "logs"
          },
          "columnDelimiter": ",",
          "escapeChar": "\"",
          "firstRowAsHeader": true,
          "quoteChar": "\""
        }
      }
    },
    {
      "type": "Microsoft.DataFactory/factories/pipelines",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('dataFactoryName'), '/OrchestrationPipeline')]",
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]",
        "[resourceId('Microsoft.DataFactory/factories/datasets', parameters('dataFactoryName'), 'SourceCSVDataset')]",
        "[resourceId('Microsoft.DataFactory/factories/pipelines', parameters('dataFactoryName'), 'CSVValidationPipeline')]"
      ],
      "properties": {
        "description": "Main orchestration pipeline that processes CSV files",
        "activities": [
          {
            "name": "GetMetadata",
            "type": "GetMetadata",
            "typeProperties": {
              "dataset": {
                "referenceName": "SourceCSVDataset",
                "type": "DatasetReference",
                "parameters": {
                  "fileName": "*"
                }
              },
              "fieldList": [
                "childItems"
              ]
            }
          },
          {
            "name": "ForEachFile",
            "type": "ForEach",
            "dependsOn": [
              {
                "activity": "GetMetadata",
                "dependencyConditions": [
                  "Succeeded"
                ]
              }
            ],
            "typeProperties": {
              "items": {
                "value": "@activity('GetMetadata').output.childItems",
                "type": "Expression"
              },
              "activities": [
                {
                  "name": "ExecuteValidationPipeline",
                  "type": "ExecutePipeline",
                  "typeProperties": {
                    "pipeline": {
                      "referenceName": "CSVValidationPipeline",
                      "type": "PipelineReference"
                    },
                    "parameters": {
                      "fileName": {
                        "value": "@item().name",
                        "type": "Expression"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.DataFactory/factories/pipelines",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('dataFactoryName'), '/CSVValidationPipeline')]",
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]",
        "[resourceId('Microsoft.DataFactory/factories/datasets', parameters('dataFactoryName'), 'SourceCSVDataset')]",
        "[resourceId('Microsoft.DataFactory/factories/datasets', parameters('dataFactoryName'), 'StagingTableDataset')]",
        "[resourceId('Microsoft.DataFactory/factories/datasets', parameters('dataFactoryName'), 'TargetTableDataset')]",
        "[resourceId('Microsoft.DataFactory/factories/datasets', parameters('dataFactoryName'), 'ValidationLogDataset')]"
      ],
      "properties": {
        "description": "CSV validation and processing pipeline",
        "parameters": {
          "fileName": {
            "type": "string"
          }
        },
        "activities": [
          {
            "name": "ValidateFile",
            "type": "Validation",
            "typeProperties": {
              "dataset": {
                "referenceName": "SourceCSVDataset",
                "type": "DatasetReference",
                "parameters": {
                  "fileName": {
                    "value": "@pipeline().parameters.fileName",
                    "type": "Expression"
                  }
                }
              },
              "timeout": "0.00:05:00",
              "sleep": 10
            }
          },
          {
            "name": "GetFileMetadata",
            "type": "GetMetadata",
            "dependsOn": [
              {
                "activity": "ValidateFile",
                "dependencyConditions": [
                  "Succeeded"
                ]
              }
            ],
            "typeProperties": {
              "dataset": {
                "referenceName": "SourceCSVDataset",
                "type": "DatasetReference",
                "parameters": {
                  "fileName": {
                    "value": "@pipeline().parameters.fileName",
                    "type": "Expression"
                  }
                }
              },
              "fieldList": [
                "size",
                "lastModified",
                "structure"
              ]
            }
          },
          {
            "name": "ValidateDataTypes",
            "type": "Copy",
            "dependsOn": [
              {
                "activity": "GetFileMetadata",
                "dependencyConditions": [
                  "Succeeded"
                ]
              }
            ],
            "typeProperties": {
              "source": {
                "type": "DelimitedTextSource",
                "storeSettings": {
                  "type": "AzureBlobStorageReadSettings",
                  "recursive": false,
                  "enablePartitionDiscovery": false
                },
                "formatSettings": {
                  "type": "DelimitedTextReadSettings"
                }
              },
              "sink": {
                "type": "AzureSqlSink",
                "writeBehavior": "insert",
                "sqlWriterUseTableLock": false,
                "disableMetricsCollection": false
              },
              "enableStaging": false,
              "translator": {
                "type": "TabularTranslator",
                "typeConversion": true,
                "typeConversionSettings": {
                  "allowDataTruncation": false,
                  "treatBooleanAsNumber": false
                }
              }
            },
            "inputs": [
              {
                "referenceName": "SourceCSVDataset",
                "type": "DatasetReference",
                "parameters": {
                  "fileName": {
                    "value": "@pipeline().parameters.fileName",
                    "type": "Expression"
                  }
                }
              }
            ],
            "outputs": [
              {
                "referenceName": "StagingTableDataset",
                "type": "DatasetReference",
                "parameters": {
                  "tableName": "staging_table"
                }
              }
            ]
          },
          {
            "name": "LogValidationSuccess",
            "type": "Copy",
            "dependsOn": [
              {
                "activity": "ValidateDataTypes",
                "dependencyConditions": [
                  "Succeeded"
                ]
              }
            ],
            "typeProperties": {
              "source": {
                "type": "DelimitedTextSource",
                "additionalColumns": [
                  {
                    "name": "fileName",
                    "value": {
                      "value": "@pipeline().parameters.fileName",
                      "type": "Expression"
                    }
                  },
                  {
                    "name": "validationStatus",
                    "value": "SUCCESS"
                  },
                  {
                    "name": "validationTime",
                    "value": {
                      "value": "@utcnow()",
                      "type": "Expression"
                    }
                  }
                ],
                "storeSettings": {
                  "type": "AzureBlobStorageReadSettings",
                  "recursive": false,
                  "enablePartitionDiscovery": false
                },
                "formatSettings": {
                  "type": "DelimitedTextReadSettings"
                }
              },
              "sink": {
                "type": "DelimitedTextSink",
                "storeSettings": {
                  "type": "AzureBlobStorageWriteSettings"
                },
                "formatSettings": {
                  "type": "DelimitedTextWriteSettings",
                  "quoteAllText": false,
                  "fileExtension": ".txt"
                }
              },
              "enableStaging": false
            },
            "inputs": [
              {
                "referenceName": "SourceCSVDataset",
                "type": "DatasetReference",
                "parameters": {
                  "fileName": {
                    "value": "@pipeline().parameters.fileName",
                    "type": "Expression"
                  }
                }
              }
            ],
            "outputs": [
              {
                "referenceName": "ValidationLogDataset",
                "type": "DatasetReference",
                "parameters": {
                  "fileName": {
                    "value": "@concat('validation_log_', formatDateTime(utcnow(), 'yyyyMMdd_HHmmss'), '.csv')",
                    "type": "Expression"
                  }
                }
              }
            ]
          },
          {
            "name": "MergeToTargetTable",
            "type": "SqlServerStoredProcedure",
            "dependsOn": [
              {
                "activity": "LogValidationSuccess",
                "dependencyConditions": [
                  "Succeeded"
                ]
              }
            ],
            "typeProperties": {
              "storedProcedureName": "sp_MergeToTargetTable",
              "storedProcedureParameters": {
                "sourceTable": {
                  "value": "staging_table",
                  "type": "String"
                },
                "targetTable": {
                  "value": "target_table",
                  "type": "String"
                }
              }
            },
            "linkedServiceName": {
              "referenceName": "AzureSqlDatabase",
              "type": "LinkedServiceReference"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.DataFactory/factories/triggers",
      "apiVersion": "2018-06-01",
      "name": "[concat(parameters('dataFactoryName'), '/FileUploadTrigger')]",
      "dependsOn": [
        "[resourceId('Microsoft.DataFactory/factories/pipelines', parameters('dataFactoryName'), 'OrchestrationPipeline')]"
      ],
      "properties": {
        "type": "BlobEventsTrigger",
        "typeProperties": {
          "blobPathBeginsWith": "/source/",
          "blobPathEndsWith": ".csv",
          "ignoreEmptyBlobs": true,
          "scope": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
          "events": [
            "Microsoft.Storage.BlobCreated"
          ]
        },
        "pipelines": [
          {
            "pipelineReference": {
              "referenceName": "OrchestrationPipeline",
              "type": "PipelineReference"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "dataFactoryName": {
      "type": "string",
      "value": "[parameters('dataFactoryName')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "sqlServerName": {
      "type": "string",
      "value": "[parameters('sqlServerName')]"
    },
    "databaseName": {
      "type": "string",
      "value": "[parameters('databaseName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    }
  }
}